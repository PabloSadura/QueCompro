# render.yaml - Configuración para desplegar en Render.com
# Coloca este archivo en la raíz de tu repositorio.

services:
  # --------------------- #
  #    Servicio Backend   #
  # --------------------- #
  - type: web
    name: backend
    env: node
    # Ubicación del servidor, elige la más cercana a tus usuarios. ej: oregon (US West)
    region: oregon
    # Directorio donde se encuentra tu código de backend.
    # Si tu backend está en la raíz, elimina esta línea.
    rootDir: ./backend
    # Plan de Render (Free es gratis, pero se suspende por inactividad).
    plan: free
    # Comandos para construir y ejecutar tu backend.
    buildCommand: "npm install"
    startCommand: "node src/server.js" # Asegúrate que esta sea la ruta correcta a tu archivo principal.
    # Variables de entorno que tu backend necesita.
    # IMPORTANTE: No pongas tus claves secretas aquí. Se configuran en el dashboard de Render.
    envVars:
      - key: NODE_ENV
        value: production
      # --- Configura estas claves en el Dashboard de Render ---
      - key: SERPAPI_API_KEY
        fromSecret: true
      - key: GEMINI_API_KEY
        fromSecret: true
      - key: OPENAI_API_KEY
        fromSecret: true
      # La clave de Firebase se configura como un "Secret File". Ver instrucciones abajo.

  # ---------------------- #
  #    Servicio Frontend   #
  # ---------------------- #
  - type: static site # CORRECCIÓN: Se cambió "static" por "static site"
    name: que-compro-frontend
    # Directorio donde se encuentra tu código de Angular.
    rootDir: ./que-compro-frontend
    # Rama del repositorio a desplegar.
    branch: main
    # Comandos para construir el frontend.
    buildCommand: "npm install && ng build"
    # Directorio donde se encuentran los archivos construidos por Angular.
    # El nombre debe coincidir con el de tu proyecto en angular.json (projects -> [tu-proyecto] -> architect -> build -> options -> outputPath).
    publishDir: dist/que-compro-frontend
    # Regla de reescritura para que Angular maneje todas las rutas (Single Page Application).
    # Esto es crucial para que al recargar la página en /history o /about no dé un error 404.
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

